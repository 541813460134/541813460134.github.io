(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{508:function(t,i,e){"use strict";e.r(i);var a=e(15),n=Object(a.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("说明：本章内容是博主的Java学习笔记，")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/wqm_104/mypic/raw/master/img/7aec54e736d12f2e0fff32033bc67a64843568e2.jpeg",alt:"7aec54e736d1"}})]),t._v(" "),e("ol",[e("li",[e("p",[t._v("New:初始状态，线程被创建，没有调用start（）")])]),t._v(" "),e("li",[e("p",[t._v("Runnable:运行状态，Java线程把操作系统中的就绪和运行两种状态统一称为“运行中”")])]),t._v(" "),e("li",[e("p",[t._v("Blocked:阻塞，线程进入等待状态，线程因为某种原因，放弃了CPU的使用权")])]),t._v(" "),e("li",[e("p",[t._v("Waiting:等待状态")])]),t._v(" "),e("li",[e("p",[t._v("timed_waiting:超时等待状态，超时以后自动返回")])]),t._v(" "),e("li",[e("p",[t._v("terminated:终止状态，当前线程执行完毕")])])]),t._v(" "),e("p",[t._v("wait使线程从Running到Waitingsleep使线程从Running到timed_waiting:超时等待状态，时间一到自动变回Running状态可以看出wait和sleep都可以使线程中止，但是也存在许多不同，下面就逐一来看下wait和sleep的不同之处")]),t._v(" "),e("p",[e("strong",[t._v("区别")])]),t._v(" "),e("p",[e("strong",[t._v("一、sleep是Thread的方法，wait是Object的方法")])]),t._v(" "),e("p",[e("strong",[t._v("二、sleep不会去释放锁，但是wait会释放这个锁，并把这个wait的线程加入到这个锁的等待队列中去")])]),t._v(" "),e("p",[e("strong",[t._v("三、使用wait必须要定义一个synchronized，而sleep不需要")])]),t._v(" "),e("p",[e("strong",[t._v("四、使用sleep不需要被唤醒，但是wait是需要notify()或者notifyAll()去唤醒的，除了wait(1000)这种形式")])]),t._v(" "),e("h5",{attrs:{id:"为什么wait-notify-notifyall定义在object中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么wait-notify-notifyall定义在object中"}},[t._v("#")]),t._v(" 为什么wait，notify，notifyAll定义在Object中？")]),t._v(" "),e("p",[t._v("这是个设计相关的问题，它考察的是面试者对现有系统和一些普遍存在但看起来不合理的事物的看法。回答这些问题的时候，你要说明为什么把这些方法放在Object类里是有意义的，还有不把它放在Thread类里的原因。一个很明显的原因是JAVA提供的锁是对象级的而不是线程级的，每个对象都有锁，通过线程获得。如果线程需要等待某些锁那么调用对象中的wait()方法就有意义了。如果wait()方法定义在Thread类中，线程正在等待的是哪个锁就不明显了。简单的说，由于wait，notify和notifyAll都是锁级别的操作，所以把他们定义在Object类中因为锁属于对象。")])])}),[],!1,null,null,null);i.default=n.exports}}]);